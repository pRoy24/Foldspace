import { FacilitatorConfig } from 'x402/types';
import { CreateHeaders } from 'x402/verify';

/**
 * Creates an authorization header for a request to the Coinbase API.
 *
 * @param apiKeyId - The api key ID
 * @param apiKeySecret - The api key secret
 * @param requestMethod - The method for the request (e.g. 'POST')
 * @param requestHost - The host for the request (e.g. 'https://x402.org/facilitator')
 * @param requestPath - The path for the request (e.g. '/verify')
 * @returns The authorization header string
 */
declare function createAuthHeader(apiKeyId: string, apiKeySecret: string, requestMethod: string, requestHost: string, requestPath: string): Promise<string>;
/**
 * Creates a correlation header for a request to the Coinbase API.
 *
 * @returns The correlation header string
 */
declare function createCorrelationHeader(): string;
/**
 * Creates a CDP auth header for the facilitator service
 *
 * @param apiKeyId - The CDP API key ID
 * @param apiKeySecret - The CDP API key secret
 * @returns A function that returns the auth headers
 */
declare function createCdpAuthHeaders(apiKeyId?: string, apiKeySecret?: string): CreateHeaders;
/**
 * Creates a facilitator config for the Coinbase X402 facilitator
 *
 * @param apiKeyId - The CDP API key ID
 * @param apiKeySecret - The CDP API key secret
 * @returns A facilitator config
 */
declare function createFacilitatorConfig(apiKeyId?: string, apiKeySecret?: string): FacilitatorConfig;
declare const facilitator: FacilitatorConfig;

export { createAuthHeader, createCdpAuthHeaders, createCorrelationHeader, createFacilitatorConfig, facilitator };
